---
- name: Install Packages (Debian/Ubuntu)
  yum:
    name: '{{ apt_mysql5_server_packages }}'
    state: present
  become: true
  tags: [ server5 ]

- name: Stop Mysqld
  service:
    name: 'mysql'
    state: 'stopped'
  become: true
  tags: [ server5, server8 ]

- name: Reset mysqld state
  block:
  - name: Remove existing db state
    file:
      path: '/var/lib/mysql'
      state: absent
  - name: Recreate mysqld data dir
    file:
      path: '{{ mysql_data_dir }}'
      owner: 'mysql'
      group: 'mysql'
      mode: 0750
      state: directory
  - name: Update AppArmor data dir access pt.1
    lineinfile:
      dest: '/etc/apparmor.d/usr.sbin.mysqld'
      regexp: '  /var/lib/mysql/ r,'
      line: '  {{ mysql_data_dir }}/ r,'
      backup: no
  - name: Update AppArmor data dir access pt.2
    lineinfile:
      dest: '/etc/apparmor.d/usr.sbin.mysqld'
      regexp: '  /var/lib/mysql/\*\* rwk,'
      line: '  {{ mysql_data_dir }}/** rwk,'
      backup: no
    notify: restart_apparmor
  become: true
  tags: [ init, server5, server8 ]
  when: mystat.stat.exists == false

- name: Set Master Config
  template:
    src: mysqld.cnf
    dest: /etc/mysql/conf.d/mysqld.cnf
  vars:
    mysql_server_id: 1
  become: true
  when: inventory_hostname in groups['master']
  tags: [ server5, server8 ]

- name: Set Slave Config
  template:
    src: mysqld.cnf
    dest: /etc/mysql/conf.d/mysqld.cnf
  vars:
    mysql_server_id: 2
  become: true
  when: inventory_hostname in groups['slave']
  tags: [ server5, server8 ]

- name: Initialize mysqld
  block:
  - name: Initialize mysql
    shell: 'mysqld --initialize-insecure --user=mysql'
  - name: Start mysqld (Debian/Ubuntu)
    service:
      name: 'mysql'
      state: 'started'
      enabled: 'yes'
  - name: Set root password
    shell: "mysql -u root --skip-password -e \"ALTER USER root@localhost IDENTIFIED BY '{{ mysql_root_password }}'\""
  become: true
  tags: [ init, server5, server8 ]
  when: mystat.stat.exists == false

- name: Set ~/my.cnf
  template:
    src: mypw.cnf
    dest: .my.cnf
  tags: [ server5, server8 ]

- name: Mysql Root accounts
  mysql_user:
    login_user: 'root'
    login_password: '{{ mysql_root_password }}'
    name: 'root'
    password: '{{ mysql_root_password }}'
    host: '{{ item }}'
    priv: '*.*:ALL,GRANT'
    state: present
  with_items: '{{ mysql_master_hosts }}'
  tags: [ server5, server8 ]
